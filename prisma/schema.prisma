// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  COURIER
  ADMIN
}

model User {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  cpf      String    @unique @default("")
  password String
  role     UserRole  @default(COURIER)
  Package  Package[]
  Photo    Photo[]

  @@map("users")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  content     String
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  recipient   Recipient @relation(fields: [recipientId], references: [id])

  @@map("notifications")
}

model Recipient {
  id            String         @id @default(uuid())
  name          String
  city          String
  state         String
  postalCode    String
  address       String
  number        String
  complement    String?
  latitude      Decimal
  longitude     Decimal
  Package       Package[]
  notifications Notification[]

  @@map("recipients")
}

model Package {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  courierId   String?   @map("courier_id")
  name        String
  postedAt    DateTime  @default(now()) @map("posted_at")
  collectedAt DateTime? @map("collected_at")
  deliveredAt DateTime? @map("delivered_at")
  returnedAt  DateTime? @map("returned_at")

  recipient Recipient @relation(fields: [recipientId], references: [id])
  courier   User?     @relation(fields: [courierId], references: [id])
  photos    Photo[]

  @@map("packages")
}

model Photo {
  id        String  @id @default(uuid())
  title     String
  url       String
  packageId String? @map("package_id")
  courierId String? @map("courier_id")

  package Package? @relation(fields: [packageId], references: [id])
  courier User?    @relation(fields: [courierId], references: [id])

  @@map("photos")
}
